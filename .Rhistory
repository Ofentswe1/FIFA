a <- 42
A <- a * 2  # R is case sensitive
print(a)
cat(A, "\n") # "84" is concatenated with "\n"
if(A>a) # true, 84 > 42
{
cat(A, ">", a, "\n")
}
a
A
.libPaths()[1],pkgs = as.data.frame(installed.packages(lib), stringsAsFactors=FALSE)$Package,type = 'source'
.libPaths()[1]
as.data.frame(installed.packages(lib)
as.data.frame(installed.packages(lib), stringsAsFactors=FALSE)$Package,type = 'source'
as.data.frame(installed.packages(lib)
as.data.frame(installed.packages(lib), stringsAsFactors=FALSE)$Package
install.packages(
lib  = lib <- .libPaths()[1],pkgs = as.data.frame(installed.packages(lib), stringsAsFactors=FALSE)$Package,type = 'source'
)
package_df <- as.data.frame(installed.packages("/Library/Frameworks/R.framework/Versions/2.15/Resources/library"))
package_list <- as.character(package_df$Package)
package_df
package_list
package_list
install.packages(package_list)
install.packages(package_list)
update.packages(package_list)
install.packages("ggplot2")
old.packages()
update.packages()
install.packages("plotly")
install.packages("Caret")
install.packages("dplyr")
install.packages("Cart ")
View(package_df)
View(package_df)
read.csv("C:\Users\v-inathi.mbomvu\Desktop\FIFA WorldCup\Datasets\CompleteDataset.csv")
read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\Datasets\\CompleteDataset.csv")
CompleteData <- as.data.frame(read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\Datasets\\CompleteDataset.csv"))
CompleteData
View(CompleteData)
CompleteData[Value]
CompleteData["Value"]
CompleteData["Value"]
boxplot.stats(CompleteData)$out
boxplot.stats(CompleteData["Value"])$out
boxplot.stats(CompleteData["Overall"])$out
CompleteData["Overall"]
boxplot.stats(CompleteData["Overall"])$out
CompleteData
plot(cars)
---
title: "R Notebook"
output: html_notebook
title: "R Notebook"
plot(CompleteData)
plot(CompleteData)
View(CompleteData)
plot(CompleteData[Overall])
plot(CompleteData["Overall""])
plot(CompleteData["Overall"])
plot(CompleteData["Overall"],["Potential"])
plot(CompleteData(c("Overall"],["Potential"))
plot(CompleteData([c("Overall"],["Potential")])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(CompleteData["Overall"]
plot(CompleteData["Overall"])
plot(CompleteData["Overall"])
plot(CompleteData["Overall"])
plot(CompleteData["Overall"])
library("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("magrittr")
devtools::load_all("worldcup")
library(tidyverse)
library(magrittr)
library(magrittr)
library(magrittr)
update.packages("magrittr")
update.packages("magrittr")
package:tidyr
install.packages("tidyr")
install.packages("tidyr")
params$normalgoals
ComoleteDataset <- read.csv("C:\Users\v-inathi.mbomvu\Desktop\FIFA WorldCup\FIFA\data\CompleteDataset.csv")
ComoleteDataset <- read.csv(@"C:\Users\v-inathi.mbomvu\Desktop\FIFA WorldCup\FIFA\data\CompleteDataset.csv")
ComoleteDataset <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\CompleteDataset.csv")
playerAttributes <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\PlayerAttributeData.csv")
playerPersonlaData <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\PlayerPersonalData.csv")
playerPositionData <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\PlayerPlayingPositionData.csv")
results <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\results.csv")
View(results)
summarise(results'')
summarise(results["home_score"])
summarise(results[4])
summarise(results[4,])
results
resul''
results$home_score
CompleteDataset <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\CompleteDataset.csv")
variable.names
variable.names()
list()
list(variable.names())
ls()
ls([1])
ls[1]
ls("ComoleteDataset")
ComoleteDataset
ls()
list = ls()
list
list[1]
rm(list[1])
list[1]
list[1]
rm(list=list[1])
rm(list)
devtools::load_all("worldcup")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::load_all("worldcup")
devtools
CompleteDataset.head()
head(CompleteDataset)
tail(CompleteDataset)
head(CompleteDataset,5)
head(CompleteDataset,1)
tail(CompleteDataset,1)
results["home_score"]
length(results["home_score"])
results["home_score"]
len(results["home_score"])
lenght(results["home_score"])
length(results["home_score"])
results["home_score"]
year
results
results["home_score"]
for (score in c(results["home_score"])){
print(paste("The year is", score))
}
for (score in c(results["home_score"])){
print(paste("score is", score))
}
for (i in c(results["home_score"])){
print(i)
}
for (i in c(results["home_score"])){
if(i>results["home_score"])
{
print(results$away_team +" wins !")
}
}
for (i in c(results["home_score"])){
if(i>results$home_score)
{
print(results$away_team +" wins !")
}
}
for (i in c(results["home_score"])){
print(i)
}
for (i in c(results["home_score"])){
data <- i
}
data
ls()
ls("score")
ls(score)
ls(4)
ls[4]
ls([4])
ls(c[4])
ls[4]
ls()
list <-ls()
list
list[4]
list[7]
list[1]
list[2]
list
rm(list <-ls())
rm(list =ls())
#Get Complete dataset
CompleteDataset <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\CompleteDataset.csv")
#Player Attributes
playerAttributes <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\PlayerAttributeData.csv")
#PlayerPersonalData
playerPersonlaData <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\PlayerPersonalData.csv")
#POsition Data
playerPositionData <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\PlayerPlayingPositionData.csv")
#FIFA Results
results <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\results.csv")
for (i in c(results["home_score"])){
data <- i
}
i
data
if(results$home_score > results$away_score){
print("Yes")
}
if(results["home_score"] > results["away_score"]){
print("Yes")
}
results["home_score"]
length(results)
View(results)
rowsum.data.frame(results)
rowsum.data.frame(results$home_team)
data
i
length(i)
for (i in c(results["home_score"])){
counter<- 1
while (counter < length(i)) {
print(i[counter])
}
}
counter<- 1
for (i in c(results["home_score"])){
while (counter < length(i)) {
print(i[counter])
counter <- counter + 1
}
}
View(results)
counter<- 1
for (i in c(results["home_score"])){
while (counter < length(i)) {
if(results[4,counter] > results[5,counter]){
print(results[2,counter] +" wins !")
}
}
}
results[4,2]
results[4,]
results[,4]
results[1,4]
results[2,4]
counter<- 1
for (i in c(results["home_score"])){
while (counter < length(i)) {
if(results[counter,4] > results[counter,5]){
print(results[counter,2] +" wins !")
}
}
}
counter<- 1
for (i in c(results["home_score"])){
while (counter < length(i)) {
if(results[counter,4] > results[counter,5]){
print(results[counter,2] +" wins !")
counter <- counter + 1
}
}
}
while (counter < length(i)) {
if(results[counter,4] > results[counter,5]){
print(results[counter,2] +" wins !")
counter <- counter + 1
}
}
if(results[1,4] > results[1,5]){
print(results[1,2] +" wins !")
#counter <- counter + 1
}
if(results[1,4] > results[1,5]){
print(results[1,2] +" wins !")
#counter <- counter + 1
}
print(results[1,2] +" wins !")
results[1,2]
results[2,2]
results[2,4]
results[2,4]
results[2,2]
results[2,2]
results["home_team"]
results["home_team",1]
results[1,"home_team"]
results["home_score","home_team"]
results[1,"home_team"]
results["home_team"]
results["home_team",2]
results["home_team"][1]
results["home_team"][2]
results["home_team"]$home_team
while (counter < length(i)) {
if(results[1,4] > results[1,5]){
print(" wins !")
counter<- 1 + counter
}
while (counter < length(i)) {
if(results[1,4] > results[1,5]){
print(" wins !")
counter<- 1 + counter
}
print(" wins !")
print(" wins !")
printif(" wins !")
printif(" wins !")
print("H")
print(" wins !")
if(results[1,4] > results[1,5]){
print(" wins !")
#counter<- 1 + counter
}
if(results[1,4] > results[1,5]){
print(" wins !")
#counter<- 1 + counter
}
results[1,4]
results[1,5]
if(results[1,4] = results[1,5]){
print(" wins !")
#counter<- 1 + counter
}
if(results[1,4] == results[1,5]){
print(" wins !")
#counter<- 1 + counter
}
if(results[counter,4] > results[counter,5]){
print(" wins !")
#counter<- 1 + counter
}
counter<- 2
if(results[counter,4] > results[counter,5]){
print(" wins !")
#counter<- 1 + counter
}
results[1,2]
list <-results[1,2]
list[1]
list[1,2]
list[1,1]
list[,1]
list[1,]
list
counter<- 1
for (i in c(results["home_score"])){
while (counter < length(i)) {
if(results[counter,4] > results[counter,5]){
print(" wins !")
#counter<- 1 + counter
}
}
}
CompleteDataset
results
playerPositionData
ls()
counter
length
length(i)
counter<- 1
for (i in c(results["home_score"])){
holder<- length(i)
while (counter < holder) {
if(results[counter,4] > results[counter,5]){
print(" wins !")
counter<- 1 + counter
}
}
}
counter<- 1
for (i in c(results["home_score"])){
holder<- length(i)
while (counter < holder) {
if(results[counter,4] > results[counter,5]){
print(" wins !")
counter<- 1 + counter
}
}
}
rm(counter)
rm(dada)
rm(data)
rm(holder)
rm(i)
rm(list)
results
holder
library(holder)
library(Cart )
library(Cart)
library(Caret)
CompleteDataset
CompleteDataset
getOption()
getOption(4)
getOption(results)
getOption
CompleteDataset
results
data.class(results)
compare(playerAttributes,playerPersonlaData,allowAll=TRUE)
install.packages(compare)
install.packages("compare")
compare(playerAttributes,playerPersonlaData,allowAll=TRUE)
library(tidyverse)
library(tidyverse)
library(magrittr)
install.packages("tidyverse")
library(tidyverse)
install.packages("Rcpp")
library(tidyverse)
install.packages("bindrcpp")
library(tidyverse)
install.packages("glue")
library(tidyverse)
#' Install Dependent Packages
#'
#' @param pkg.dir refers to the package directory that contains the
#'     \code{Description} file
#' @param dependencies defines which dependencies of the dependent packages are
#'     to be installed
#' @param repos is the (CRAN) repository used to install dependencies
#' @param lib is the library to which packages are installed
install_dep = function(pkg.dir = ".", dependencies = TRUE, repos = getOption("repos")[1], lib = .libPaths()[1]) {
# default dependencies
if(dependencies == TRUE) {
dependencies = c("Depends", "Imports", "LinkingTo")
}
# returns string w/o leading or trailing whitespace
trim = function (x) gsub("^\\s+|\\s+$", "", x)
# http://stackoverflow.com/questions/30223957/elegantly-extract-r-package-dependencies-of-a-package-not-listed-on-cran
dcf = read.dcf(file.path(pkg.dir, "DESCRIPTION"))
deps = unique(gsub("\\s.*", "", trim(unlist(strsplit(dcf[, intersect(dependencies, colnames(dcf))], ","), use.names = FALSE))))
# install dependencies that aren't already installed
deps = deps[!(deps %in% c("R", rownames(installed.packages())))]
if(length(deps) > 0) {
message(paste("Also installing:", paste(deps)))
install.packages(deps)
}
}
install.packages(deps)
#' Install Dependent Packages
#'
#' @param pkg.dir refers to the package directory that contains the
#'     \code{Description} file
#' @param dependencies defines which dependencies of the dependent packages are
#'     to be installed
#' @param repos is the (CRAN) repository used to install dependencies
#' @param lib is the library to which packages are installed
install_dep = function(pkg.dir = ".", dependencies = TRUE, repos = getOption("repos")[1], lib = .libPaths()[1]) {
# default dependencies
if(dependencies == TRUE) {
dependencies = c("Depends", "Imports", "LinkingTo")
}
# returns string w/o leading or trailing whitespace
trim = function (x) gsub("^\\s+|\\s+$", "", x)
# http://stackoverflow.com/questions/30223957/elegantly-extract-r-package-dependencies-of-a-package-not-listed-on-cran
dcf = read.dcf(file.path(pkg.dir, "DESCRIPTION"))
deps = unique(gsub("\\s.*", "", trim(unlist(strsplit(dcf[, intersect(dependencies, colnames(dcf))], ","), use.names = FALSE))))
deps
rm(install_dep())
View(install_dep)
ls()
View(install_dep)
View(install_dep)
install_dep(tidyverse)
install_dep("tidyverse")
devtools::load_all("worldcup")
setwd("C:\Users\v-inathi.mbomvu\Desktop\FIFA WorldCup\FIFA")
setwd("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA")
devtools::load_all("worldcup")
View(install_dep)
.libPaths()
any(grepl("tidyverse",
installed.packages()))
any(grepl("tidyverse",
installed.packages()))
CompleteDataset
source('C:/Users/v-inathi.mbomvu/Desktop/FIFA WorldCup/FIFA/src/readData.R')
#library(magrittr)
devtools::load_all("worldcup")
#Get Complete dataset
CompleteDataset <- read.csv("C:\\Users\\v-inathi.mbomvu\\Desktop\\FIFA WorldCup\\FIFA\\data\\CompleteDataset.csv")
ls()
rm(list=ls())
source('C:/Users/v-inathi.mbomvu/Desktop/FIFA WorldCup/FIFA/src/readData.R', echo=TRUE)
source('C:/Users/v-inathi.mbomvu/Desktop/FIFA WorldCup/FIFA/src/readData.R', echo=TRUE)
dir()
cd data
read.csv("\\data\\results.csv")
read.csv("~\\data\\results.csv")
read.csv("~//data//results.csv")
read.csv("~/data/results.csv")
read.csv("~/data/results.csv")
read.csv("~/data/results.csv")
read.csv("/data/results.csv")
read.csv("~/data/results.csv")
read.csv("~~/FIFA/data/results.csv")
read.csv("~/FIFA/data/results.csv")
read.csv("~/FIFA WorldCup/FIFA/data/results.csv")
read.csv("~/Desktop/FIFA WorldCup/FIFA/data/results.csv")
read.csv("~/Desktop/FIFA WorldCup/FIFA/data/results.csv")
CompleteDataset
